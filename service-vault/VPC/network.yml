AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This AWS CloudFormation Template creates an Amazon VPC with public and private subnets,
  Internet Gateways, NAT Gateways, and associated route tables for an application.

Resources:
  ApplicationVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC
    # Description: This resource defines the Amazon VPC for the application with DNS support and hostnames enabled.

  #################### PUBLIC SUBNETS ########################

  ApplicationPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.0.128.0/22
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet (AZ1)
    # Description: This resource defines a public subnet in Availability Zone 1.

  ApplicationPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: 10.0.136.0/22
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet (AZ2)
    # Description: This resource defines a public subnet in Availability Zone 2.

  ApplicationPublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: 10.0.144.0/22
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet (AZ3)
    # Description: This resource defines a public subnet in Availability Zone 3.

  #################### PRIVATE SUBNETS ########################

  ApplicationPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.0.64.0/22
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private Subnet (AZ1)
    # Description: This resource defines a private subnet in Availability Zone 1.

  ApplicationPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: 10.0.72.0/22
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private Subnet (AZ2)
    # Description: This resource defines a private subnet in Availability Zone 2.

  ApplicationPrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: 10.0.80.0/22
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private Subnet (AZ2)
    # Description: This resource defines a private subnet in Availability Zone 3.

  #################### PRIVATE WITHOUT NAT SUBNETS ########################

  # 10.1.1000 0000.0/22
  ApplicationPrivateWithoutNATSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.0.32.0/22
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private without NAT Subnet (AZ1)
    # Description: This resource defines a private subnet without NAT in Availability Zone 1.

  # 10.1.1010 0000.0/22
  ApplicationPrivateWithoutNATSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: 10.0.40.0/22
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private without NAT Subnet (AZ2)
    # Description: This resource defines a private subnet without NAT in Availability Zone 2.

  # 10.1.1010 0000.0/22
  ApplicationPrivateWithoutNATSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: 10.0.48.0/22
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private without NAT Subnet (AZ2)
    # Description: This resource defines a private subnet without NAT in Availability Zone 3.

  #################### INTERNET GATEWAYS ########################

  ApplicationInternetGateway:
    Type: AWS::EC2::InternetGateway
    # Description: This resource defines the Internet Gateway for the VPC.

  ApplicationInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref ApplicationInternetGateway
      VpcId: !Ref ApplicationVPC
    # Description: This resource attaches the Internet Gateway to the VPC.

  ApplicationNatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: ApplicationInternetGatewayAttachment
    Properties:
      Domain: vpc

  ApplicationNatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: ApplicationInternetGatewayAttachment
    Properties:
      Domain: vpc

  ApplicationNatGateway3EIP:
    Type: AWS::EC2::EIP
    DependsOn: ApplicationInternetGatewayAttachment
    Properties:
      Domain: vpc

  ApplicationNatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ApplicationNatGateway1EIP.AllocationId
      SubnetId: !Ref ApplicationPublicSubnet1
    # Description: This resource defines a NAT Gateway in public subnet 1.

  ApplicationNatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ApplicationNatGateway2EIP.AllocationId
      SubnetId: !Ref ApplicationPublicSubnet2
    # Description: This resource defines a NAT Gateway in public subnet 2.

  ApplicationNatGateway3:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ApplicationNatGateway3EIP.AllocationId
      SubnetId: !Ref ApplicationPublicSubnet3
    # Description: This resource defines a NAT Gateway in public subnet 3.

  #################### APPLICATION ROUTE TABLE ########################

  ApplicationPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: Public Routes
    # Description: This resource defines the route table for public subnets.

  ApplicationDefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: ApplicationInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref ApplicationPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ApplicationInternetGateway
    # Description: This resource defines the default route for public subnets.

  ApplicationPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPublicRouteTable
      SubnetId: !Ref ApplicationPublicSubnet1

  ApplicationPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPublicRouteTable
      SubnetId: !Ref ApplicationPublicSubnet2

  ApplicationPublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPublicRouteTable
      SubnetId: !Ref ApplicationPublicSubnet3

  ApplicationPrivateWithoutNATRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: Private without NAT Routes (AZ1)
    # Description: This resource defines the route table for private subnets without NAT in AZ1.

  ApplicationPrivateWithoutNATRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: Private without NAT Routes (AZ2)
    # Description: This resource defines the route table for private subnets without NAT in AZ2.

  ApplicationPrivateWithoutNATRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: Private without NAT Routes (AZ3)
    # Description: This resource defines the route table for private subnets without NAT in AZ3.

  ApplicationPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: Private Routes (AZ1)
    # Description: This resource defines the route table for private subnets in AZ1.

  ApplicationPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: Private Routes (AZ2)
    # Description: This resource defines the route table for private subnets in AZ2.

  ApplicationPrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: Private Routes (AZ3)
    # Description: This resource defines the route table for private subnets in AZ3.

  ApplicationDefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ApplicationPrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref ApplicationNatGateway1

  ApplicationDefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ApplicationPrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref ApplicationNatGateway2

  ApplicationDefaultPrivateRoute3:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ApplicationPrivateRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref ApplicationNatGateway3

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPrivateRouteTable1
      SubnetId: !Ref ApplicationPrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPrivateRouteTable2
      SubnetId: !Ref ApplicationPrivateSubnet2

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPrivateRouteTable3
      SubnetId: !Ref ApplicationPrivateSubnet3

  PrivateWithoutNATSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPrivateWithoutNATRouteTable1
      SubnetId: !Ref ApplicationPrivateWithoutNATSubnet1

  PrivateWithoutNATSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPrivateWithoutNATRouteTable2
      SubnetId: !Ref ApplicationPrivateWithoutNATSubnet2

  PrivateWithoutNATSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ApplicationPrivateWithoutNATRouteTable3
      SubnetId: !Ref ApplicationPrivateWithoutNATSubnet3

############################### OUTPUTS #############################

Outputs:
  ApplicationVPC:
    Description: Id for the VPC used by the application
    Value: !Ref ApplicationVPC
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ApplicationVPC]]

  ApplicationPublicSubnet1:
    Description: Id for public subnet(AZ-1) for the application
    Value: !Ref ApplicationPublicSubnet1
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ApplicationPublicSubnet1]]

  ApplicationPublicSubnet2:
    Description: Id for public subnet(AZ-2) for the application
    Value: !Ref ApplicationPublicSubnet2
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ApplicationPublicSubnet2]]

  ApplicationPublicSubnet3:
    Description: Id for public subnet(AZ-3) for the application
    Value: !Ref ApplicationPublicSubnet3
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ApplicationPublicSubnet3]]

  ApplicationPrivateWithoutNATSubnet1:
    Description: Id for protected subnet(AZ-1) for the application
    Value: !Ref ApplicationPrivateWithoutNATSubnet1
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", ApplicationPrivateWithoutNATSubnet1],
        ]

  ApplicationPrivateWithoutNATSubnet2:
    Description: Id for protected subnet(AZ-2) for the application
    Value: !Ref ApplicationPrivateWithoutNATSubnet2
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", ApplicationPrivateWithoutNATSubnet2],
        ]

  ApplicationPrivateWithoutNATSubnet3:
    Description: Id for protected subnet(AZ-3) for the application
    Value: !Ref ApplicationPrivateWithoutNATSubnet3
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", ApplicationPrivateWithoutNATSubnet3],
        ]

  ApplicationPrivateSubnet1:
    Description: Id for private subnet(AZ-1) for the application
    Value: !Ref ApplicationPrivateSubnet1
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ApplicationPrivateSubnet1]]

  ApplicationPrivateSubnet2:
    Description: Id for private subnet(AZ-2) for the application
    Value: !Ref ApplicationPrivateSubnet2
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ApplicationPrivateSubnet2]]

  ApplicationPrivateSubnet3:
    Description: Id for private subnet(AZ-3) for the application
    Value: !Ref ApplicationPrivateSubnet3
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ApplicationPrivateSubnet3]]
